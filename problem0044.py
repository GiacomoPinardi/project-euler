# www.github.com/GiacomoPinardi/project-euler

# Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2.
# The first ten pentagonal numbers are:

# 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

# It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
# However, their difference, 70 - 22 = 48, is not pentagonal.

# Find the pair of pentagonal numbers, Pj and Pk, for which
# their sum and difference are pentagonal and D = |Pk - Pj| is minimised;
# what is the value of D?

from math import sqrt

def isPentagonal(n):
    x = (1+sqrt(1+24*n))/6
    if x-int(x) == 0:
        return True
    else:
        return False

def getPentagonal(n):
    return n*(3*n-1)/2

def generatePentagonal(limit):
    p = []
    for i in range(1, limit):
        p.append(getPentagonal(i))

    return p

# Main

result = 10**20

pent = generatePentagonal(10000)

for dist in range(1, 2000):
    for i in range(len(pent)-dist):
        x = abs(pent[i]-pent[i+dist])
        y = pent[i]+pent[i+dist]
        if isPentagonal(x) and isPentagonal(y):
            result = min(x, result)

print result
