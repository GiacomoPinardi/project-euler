# www.github.com/GiacomoPinardi/project-euler

# The sequence of triangle numbers is generated by adding the natural numbers.
# So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
# The first ten terms would be: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# Let us list the factors of the first seven triangle numbers:
#     1: 1
#     3: 1,3
#     6: 1,2,3,6
#    10: 1,2,5,10
#    15: 1,3,5,15
#    21: 1,3,7,21
#    28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.
# What is the value of the first triangle number to have over five hundred divisors?

from math import sqrt

def getDivNum (n):
    d = 0
    divNum = 0
    while d < int(sqrt(n)+1):
        d += 1
        if n%d == 0:
            divNum += 1

    return divNum*2

# Main

divisors = 1

tri = 0
i = 1

while divisors <= 500:
    tri += i
    i += 1
    divisors = getDivNum(tri)

print tri

#
