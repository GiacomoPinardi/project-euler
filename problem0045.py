# www.github.com/GiacomoPinardi/project-euler

# Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

# Triangle 	  	    T(n)=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
# Pentagonal 	  	P(n)=n(3n-1)/2 	  	1, 5, 12, 22, 35, ...
# Hexagonal 	  	H(n)=n(2n-1) 	  	1, 6, 15, 28, 45, ...

# It can be verified that T(285) = P(165) = H(143) = 40755.

# Find the next triangle number that is also pentagonal and hexagonal.

from math import sqrt

def isInteger(x):
    r = False
    if x-int(x) == 0:
        r =  True

    return r

def isTriangle(n):
    x = (sqrt(1+8*n)-1)/2
    return isInteger(x)

def isPentagonal(n):
    x = (sqrt(1+24*n)+1)/6
    return isInteger(x)

def isHexagonal(n):
    x = (sqrt(1+8*n)+1)/4
    return isInteger(x)

def getHexagonal(n):
    return n*(2*n-1)

# Main

result = 0

for i in xrange(1, 100000):
    x = getHexagonal(i)
    if isHexagonal(x) and isPentagonal(x) and isTriangle(x):
        result = max(result, x)

print result
